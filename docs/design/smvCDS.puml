@startuml
hide empty methods
hide empty fields
hide circle



package SMV {
  class CDSSubGroup {
    currentSchema: SmvSchema
    crossSchema: SmvSchema
    currentRow: Row
    crossRows: Iterable[Row]
  }
    
  class SmvCDS <<Abstract>> {
    from(that): SmvCDS
    mapping(input: CDSSubGroup): CDSSubGroup
  }
  
  class CombinedCDS extends SmvCDS 
  class NoOpCDS extends SmvCDS
  
  CombinedCDS o-- "2" SmvCDS
  
  class SmvCDSAggColumn{
    from(otherCds): SmvCDSAggColumn
    as(name): SmvCDSAggColumn
    isAgg(): Boolean
  }
  
  SmvCDSAggColumn *-- "1" Expression
  SmvCDSAggColumn *-- "1" SmvCDS
  
  class SmvSelfCompareCDS extends SmvCDS
  class SmvTopNRecsCDS extends SmvCDS
  
  class SmvSingleCDSAggs{
    resolvedExprs(schema2)
    createExecuter(schema1, schema2)
  }
  
  SmvSingleCDSAggs o-L- "*" SmvCDSAggColumn
  SmvSingleCDSAggs *-- "*" Expression
  SmvSingleCDSAggs *-- "1" SmvCDS
  
  class SmvGDO <<Abstract>> {
    inGroupKeys
    createInGroupMapping(*)
    createOutSchema(*)
  }
  
  class SmvCDSAggGDO extends SmvGDO
  SmvCDSAggGDO *-- "*" SmvCDSAggColumn
  SmvCDSAggGDO *-- "*" SmvSingleCDSAggs
  
  class SmvCDSRunAggGDO extends SmvGDO
  SmvCDSRunAggGDO *-- "*" SmvCDSAggColumn
  SmvCDSRunAggGDO *-- "*" SmvSingleCDSAggs
  
  class SmvCDSPanelAggGDO extends SmvGDO
  SmvCDSPanelAggGDO *-- "*" SmvCDSAggColumn
  SmvCDSPanelAggGDO *-- "*" SmvSingleCDSAggs
  
  class SmvCDSAsGDO extends SmvGDO
  
  SmvCDSAsGDO *-- "1" SmvCDS
  
}

@enduml