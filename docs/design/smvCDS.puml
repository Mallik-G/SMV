@startuml
hide empty methods
hide empty fields
hide circle



package SMV {
  class SmvCDS <<Abstract>> {
    from(that): SmvCDS
  }
  
  class FullCompareCDS <<Abstract>> extends SmvCDS {
    mapping(schema1, schema2): (Row, Iterable) => Iterable
  }
  
  class SelfCompareCDS <<Abstract>> extends SmvCDS {
    mapping(schema): (Row, Iterable) => Iterable
  }
  
  class FilterCDS <<Abstract>> extends SmvCDS {
    mapping(schema): Iterable => Iterable
  }
  
  class CombinedFullCDS extends FullCompareCDS 
  class CombinedSelfCDS extends SelfCompareCDS 
  class CombinedFilterCDS extends FilterCDS 
  
  class NoOpCDS extends FilterCDS
  
  CombinedFullCDS *-- "2" FullCompareCDS 
  CombinedSelfCDS *-- "2" SelfCompareCDS 
  CombinedFilterCDS *-- "2" FilterCDS 
  
  class SmvCDSAggColumn{
    from(otherCds): SmvCDSAggColumn
    as(name): SmvCDSAggColumn
    isAgg(): Boolean
  }
  
  SmvCDSAggColumn *-- "1" Expression
  SmvCDSAggColumn *-- "1" SmvCDS
  
  class cds1 extends FullCompareCDS
  class cds2 extends SelfCompareCDS
  class cds3 extends FilterCDS
  
  class SmvSingleCDSAggs{
    createOutSchema(schema2)
    createExecuter(schema1, schema2)
  }
  
  SmvSingleCDSAggs o-L- "*" SmvCDSAggColumn
  SmvSingleCDSAggs *-- "*" Expression
  SmvSingleCDSAggs *-- "1" SmvCDS
  
  class SmvGDO <<Abstract>> {
    inGroupKeys
    createInGroupMapping(*)
    createOutSchema(*)
  }
  
  class SmvCDSAggGDO extends SmvGDO
  SmvCDSAggGDO *-- "*" SmvCDSAggColumn
  SmvCDSAggGDO *-- "*" SmvSingleCDSAggs
  
  class SmvCDSRunAggGDO extends SmvGDO
  SmvCDSRunAggGDO *-- "*" SmvCDSAggColumn
  SmvCDSRunAggGDO *-- "*" SmvSingleCDSAggs
  
  class SmvCDSPanelAggGDO extends SmvGDO
  SmvCDSPanelAggGDO *-- "*" SmvCDSAggColumn
  SmvCDSPanelAggGDO *-- "*" SmvSingleCDSAggs
  
  class SelfCompareCDSAsGDO extends SmvGDO
  class FilterCDSAsGDO extends SmvGDO
  
  SelfCompareCDSAsGDO *-- "1" SelfCompareCDS
  FilterCDSAsGDO *-- "1" FilterCDS
  
}

@enduml