@startuml

abstract class QueryPlanner<? extends TreeNode<PhysicalPlan>> {
+ {abstract} def strategies : Seq[QueryPlanner.this.Strategy]
==
# def planLater(LogicalPlan) : PhysicalPlan
+ def apply(LogicalPlan) : Iterator[PhysicalPlan]
}

class SparkPlanner {
+ val strategies: Seq[Strategy]
==
+ def pruneFilterProject(...): SparkPlan
}

abstract class SparkStrategies

note left of SparkStrategies
Defines a collection
of Strategies as Objects
derived from Strategy
end note

abstract class Strategy {
def apply(LogicalPlan) : Seq[PhysicalPlan]
}

QueryPlanner <|-- SparkStrategies

SparkStrategies <|-- SparkPlanner

QueryPlanner "1" *-- "1:*" Strategy

Strategy <|-- HashJoin
Strategy <|-- PartialAggregation
Strategy <|-- TakeOrdered
Strategy <|-- BasicOperators

@enduml
