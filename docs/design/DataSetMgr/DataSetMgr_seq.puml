@startuml
title run module with DataSetMgr example: x(scala)->y(py)->z(scala)

Actor User
Participant SmvApp as app
Participant DataSetMgr as dsm
Participant SmvModule as mod
Participant DataSetRepoScala as dsrs
Participant DataSetRepoPython as dsrp


User -> app: smv-run -m x
activate app
  app -> dsm: loadDSWDep('x')
  activate dsm
    dsm -> dsrs: loadDS('x')

    activate dsrs
      dsrs --> dsm: x: reqUrns=('y')
    deactivate dsrs

    dsm -> mod: x.resReq( loadDSWDepWState(state) )

    activate mod
      mod -> dsm: loadDSWithDepWState(state)('y')

      activate dsm
        dsm -> dsrs: loadDS('y')

        activate dsrs
          dsrs --> dsm: Unit
        deactivate dsrs

        dsm -> dsrp: loadDS('y')

        activate dsrp
          dsrp --> dsm: y: reqUrns=('z')
        deactivate dsrp

        dsm -> mod: y.resReq( loadDSWDepWState(state) )

        activate mod
          mod -> dsm: loadDSWDepWState(state)('z')

          activate dsm
            dsm -> dsrs: loadDS('z')

            activate dsrs
              dsrs --> dsm: z: reqUrns=()
            deactivate dsrs

            dsm -> mod: z.resReq( loadDSwDepWState(state) )

            activate mod
              mod --> dsm: ()
            deactivate mod

            dsm --> mod: z
          deactivate dsm

          mod --> dsm: (z)
        deactivate mod

        dsm --> mod: y
      deactivate dsm

      mod --> dsm: (y)
    deactivate mod

    dsm --> app: x
  deactivate dsm

  app --> app: (run x)
deactivate app

app --> User: (print result)

@enduml
