@startuml
title run module with DataSetMgr example: x(scala)->y(py)->z(scala)

Actor User
Participant SmvApp as app
Participant DataSetMgr as dsm
Participant DataSetRepoScala as dsrs
Participant DataSetRepoPython as dsrp
Participant "x:SmvModule" as x
Participant "y:SmvExtModulePython" as y
Participant "z:SmvModule" as z

User -> app: smv-run -m x
app -> dsm: loadDSWDep('x')
dsm -> dsrs: loadDS('x')
dsrs -->> x: create
activate x
dsrs --> dsm: x: reqUrns=('y')
dsm -> x: resReq( loadDSWDepWState(state) )
x -> dsm: loadDSWithDepWState(state)('y')
dsm -> dsrs: loadDS('y')
dsrs --> dsm: Unit
dsm -> dsrp: loadDS('y')
dsrp -->> y: create
activate y
dsrp --> dsm: y: reqUrns=('z')
dsm -> y: resReq( loadDSWDepWState(state) )
y -> dsm: loadDSWDepWState(state)('z')
dsm -> dsrs: loadDS('z')
dsrs -->> z: create
activate z
dsrs --> dsm: z: reqUrns=()
dsm -> z: resReq( loadDSwDepWState(state) )
z --> dsm: ()
dsm --> y: z
y --> dsm: (z)
dsm --> x: y
x --> dsm: (y)
dsm --> app: x
app --> app: (run x)
app --> User: (print result)

@enduml
