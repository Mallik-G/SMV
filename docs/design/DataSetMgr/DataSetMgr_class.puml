@startuml

hide empty methods
hide empty fields
hide circle

package Scala {
  class SmvApp
  class DataSetMgr {
    loadDataSetWithDep(fqns: String*): Seq(SmvDataSet)
  }
  class DataSetResolver {
    loadDataSet(fqn: String): SmvDataSet
    resolveDataSet(ds: SmvDataSet): SmvDataSet
  }
  class DataSetRepo {
    loadDataSet(fqn: String): SmvDataSet
    outputModulesForStage(fqn: String)
  }
  together {
    class DataSetRepoScala extends DataSetRepo
    class DataSetRepoPython extends DataSetRepo
  }
  class IDataSetRepoPy4J <<java>>
  class SmvDataSet {
    requireDS(): Seq[SmvDataSet]
    resolve(res: DataSetResolver): SmvDataSet
    run(i: runParams): DataFrame
    requireRes: Seq[SmvDataSet]
  }
  class SmvModule extends SmvDataSet
  class SmvExtModule extends SmvModule
  class SmvExtModulePython extends SmvModule
  class ISmvModulePy4J <<java>>

  SmvApp *-- DataSetMgr
  DataSetMgr .. DataSetResolver
  DataSetMgr *-- "*" DataSetRepo
  DataSetResolver o-- "*"   DataSetRepo
  DataSetRepoScala ..> "create " SmvDataSet
  SmvExtModulePython *-- ISmvModulePy4J
  DataSetRepoPython *-- IDataSetRepoPy4J
  DataSetRepoPython ..> "create " SmvExtModulePython
  IDataSetRepoPy4J ..> "create " ISmvModulePy4J
}

package Python {
  class PythonDataSetRepo extends IDataSetRepoPy4J
  class SmvPyModule extends ISmvModulePy4J
}

@enduml
