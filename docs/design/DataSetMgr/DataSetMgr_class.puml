@startuml

hide empty methods
hide empty fields
hide circle

package Scala {
  class SmvApp
  class DataSetMgr {
    registerRepoFactory(repoFactory: DataSetRepoFactory)
    loadDataSetWithDep(urns: String*): Seq(SmvDataSet)
  }
  class DataSetResolver {
    loadDataSet(urn: String): SmvDataSet
    resolveDataSet(ds: SmvDataSet): SmvDataSet
  }
  class DataSetRepoFactory {
    createRepo(): DataSetRepo
  }
  class DataSetRepo {
    loadDataSet(fqn: String): SmvDataSet
    outputModsForStage(fqn: String): Seq[String]
  }
  together {
    class DataSetRepoScala extends DataSetRepo
    class DataSetRepoPython extends DataSetRepo
  }
  class IDataSetRepoPy4J <<java>> {
    loadModule(fqn: String): ISmvModule
    outputModsForStage(fqn: String): Seq[String]
  }
  together {
    class SmvDataSet {
      requireDS(): Seq[SmvDataSet]
      resolve(res: DataSetResolver): SmvDataSet
      run(i: runParams): DataFrame
      resolvedRequireDS: Seq[SmvDataSet]
    }
    class SmvExtModulePython -|> SmvModule
    class SmvModule -L|> SmvDataSet
  }
  class SmvExtModule extends SmvModule
  class SmvExtModuleLink extends SmvExtModule
  class ISmvModulePy4J <<java>> {
    isOutput(): Boolean
  }


  SmvApp *-- DataSetMgr
  DataSetMgr ..> "create " DataSetResolver
  DataSetMgr *-- "*" DataSetRepoFactory
  DataSetResolver *-- "*"  DataSetRepo
  DataSetRepoFactory ..> "create" DataSetRepo
  DataSetRepoScala ..> "create " SmvDataSet
  DataSetRepoScala *-L- SmvClassLoader
  SmvExtModulePython *-- ISmvModulePy4J
  DataSetRepoPython *-- IDataSetRepoPy4J
  DataSetRepoPython ..> "create " SmvExtModulePython
  IDataSetRepoPy4J ..> "create " ISmvModulePy4J

}

package Python {
  class PythonDataSetRepo extends IDataSetRepoPy4J
  class SmvPyModule extends ISmvModulePy4J
}

@enduml
